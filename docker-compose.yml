version: '3.9'

services:
  chat-service:
    build: .
    container_name: ai-chat-service
    ports:
      - "8080:8080"
    environment:
      # OpenAI credentials
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_ORGANIZATION_ID: ${OPENAI_ORGANIZATION_ID}
      OPENAI_PROJECT_ID: ${OPENAI_PROJECT_ID}

      # Spring profiles
      SPRING_PROFILES_ACTIVE: prod

      # Redis
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379

      # Postgres
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/chatdb
      SPRING_DATASOURCE_USERNAME: chatuser
      SPRING_DATASOURCE_PASSWORD: chatpass
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_started
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: chat-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: chat-postgres
    environment:
      POSTGRES_DB: chatdb
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: chatpass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres-data:
